{
  "swagger": "2.0",
  "paths": {
    "/tasks/create": {
      "post": {
        "description": "Create Tasks",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "summary": "Create Tasks",
        "operationId": "Tasks",
        "parameters": [
          {
            "name": "tasks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/TaskCreateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 400
                },
                "error": {
                  "type": "string",
                  "example": "error decoding request body"
                },
                "message": {
                  "type": "string",
                  "example": "unable to process request"
                }
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 500
                },
                "error": {
                  "type": "string",
                  "example": "Unable to process the request"
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/delete": {
      "delete": {
        "description": "Delete Tasks",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "summary": "Delete Tasks",
        "operationId": "Tasks",
        "parameters": [
          {
            "example": "Z34b",
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 400
                },
                "error": {
                  "type": "string",
                  "example": "error decoding request body"
                },
                "message": {
                  "type": "string",
                  "example": "unable to process request"
                }
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 500
                },
                "error": {
                  "type": "string",
                  "example": "Unable to process the request"
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/get": {
      "get": {
        "description": "Get Tasks",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "summary": "Get Tasks",
        "operationId": "GetTasks",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "InProgress"
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "int",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GetTasksResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 400
                },
                "error": {
                  "type": "string",
                  "example": "status/priority sent in query string is not valid"
                },
                "message": {
                  "type": "string",
                  "example": "unable to process request"
                }
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 500
                },
                "error": {
                  "type": "string",
                  "example": "Unable to process the request"
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/update": {
      "put": {
        "description": "Update Tasks",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "summary": "Update Tasks",
        "operationId": "Tasks",
        "parameters": [
          {
            "name": "tasks",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#definitions/TaskCreateRequestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericResponse"
            }
          },
          "400": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 400
                },
                "error": {
                  "type": "string",
                  "example": "error decoding request body"
                },
                "message": {
                  "type": "string",
                  "example": "unable to process request"
                }
              }
            }
          },
          "500": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "int",
                  "example": 500
                },
                "error": {
                  "type": "string",
                  "example": "Unable to process the request"
                },
                "message": {
                  "type": "string",
                  "example": "An error occurred"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AuthenticateOKBody": {
      "description": "AuthenticateOKBody authenticate o k body",
      "type": "object",
      "required": [
        "IdentityToken",
        "Status"
      ],
      "properties": {
        "IdentityToken": {
          "description": "An opaque token used to authenticate a user after a successful login",
          "type": "string"
        },
        "Status": {
          "description": "The status of the authentication",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/registry"
    },
    "ChangeType": {
      "description": "Can be one of:\n\n`0`: Modified (\"C\")\n`1`: Added (\"A\")\n`2`: Deleted (\"D\")",
      "type": "integer",
      "format": "uint8",
      "title": "ChangeType Kind of change",
      "x-go-package": "github.com/docker/docker/api/types/container"
    },
    "ContainerChangeResponseItem": {
      "description": "ContainerChangeResponseItem change item in response to ContainerChanges operation",
      "type": "object",
      "required": [
        "Kind",
        "Path"
      ],
      "properties": {
        "Kind": {
          "description": "Kind of change",
          "type": "integer",
          "format": "uint8"
        },
        "Path": {
          "description": "Path to file that has changed",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "ContainerCreateCreatedBody": {
      "description": "ContainerCreateCreatedBody OK response to ContainerCreate operation",
      "type": "object",
      "required": [
        "Id",
        "Warnings"
      ],
      "properties": {
        "Id": {
          "description": "The ID of the created container",
          "type": "string",
          "x-go-name": "ID"
        },
        "Warnings": {
          "description": "Warnings encountered when creating the container",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "ContainerTopOKBody": {
      "description": "ContainerTopOKBody OK response to ContainerTop operation",
      "type": "object",
      "required": [
        "Processes",
        "Titles"
      ],
      "properties": {
        "Processes": {
          "description": "Each process running in the container, where each is process is an array of values corresponding to the titles",
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "Titles": {
          "description": "The ps column titles",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "ContainerUpdateOKBody": {
      "description": "ContainerUpdateOKBody OK response to ContainerUpdate operation",
      "type": "object",
      "required": [
        "Warnings"
      ],
      "properties": {
        "Warnings": {
          "description": "warnings",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "ContainerWaitOKBody": {
      "description": "ContainerWaitOKBody OK response to ContainerWait operation",
      "type": "object",
      "required": [
        "Error",
        "StatusCode"
      ],
      "properties": {
        "Error": {
          "$ref": "#/definitions/ContainerWaitOKBodyError"
        },
        "StatusCode": {
          "description": "Exit code of the container",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "ContainerWaitOKBodyError": {
      "description": "ContainerWaitOKBodyError container waiting error, if any",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Details of an error",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types/container"
    },
    "CreateResponse": {
      "description": "OK response to ContainerCreate operation",
      "type": "object",
      "title": "CreateResponse ContainerCreateResponse",
      "required": [
        "Id",
        "Warnings"
      ],
      "properties": {
        "Id": {
          "description": "The ID of the created container",
          "type": "string",
          "x-go-name": "ID"
        },
        "Warnings": {
          "description": "Warnings encountered when creating the container",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/container"
    },
    "ErrorResponse": {
      "type": "object",
      "title": "ErrorResponse Represents an error.",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "description": "The error message.",
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "FilesystemChange": {
      "type": "object",
      "title": "FilesystemChange Change in the container's filesystem.",
      "required": [
        "Kind",
        "Path"
      ],
      "properties": {
        "Kind": {
          "$ref": "#/definitions/ChangeType"
        },
        "Path": {
          "description": "Path to file or directory that has changed.",
          "type": "string"
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/container"
    },
    "GenericResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "error": {
          "type": "string",
          "x-go-name": "Error"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "task-manager/dto"
    },
    "GetTasksResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "error": {
          "type": "string",
          "x-go-name": "Error"
        },
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          },
          "x-go-name": "Data"
        }
      },
      "x-go-package": "task-manager/dto"
    },
    "GraphDriverData": {
      "type": "object",
      "title": "GraphDriverData Information about a container's graph driver.",
      "required": [
        "Data",
        "Name"
      ],
      "properties": {
        "Data": {
          "description": "data",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Name": {
          "description": "name",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "IdResponse": {
      "description": "IDResponse Response to an API call that returns just an Id",
      "type": "object",
      "required": [
        "Id"
      ],
      "properties": {
        "Id": {
          "description": "The id of the newly created object.",
          "type": "string",
          "x-go-name": "ID"
        }
      },
      "x-go-name": "IDResponse",
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "ImageDeleteResponseItem": {
      "description": "ImageDeleteResponseItem image delete response item",
      "type": "object",
      "properties": {
        "Deleted": {
          "description": "The image ID of an image that was deleted",
          "type": "string"
        },
        "Untagged": {
          "description": "The image ID of an image that was untagged",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "ImageSummary": {
      "description": "ImageSummary image summary",
      "type": "object",
      "required": [
        "Containers",
        "Created",
        "Id",
        "Labels",
        "ParentId",
        "RepoDigests",
        "RepoTags",
        "SharedSize",
        "Size",
        "VirtualSize"
      ],
      "properties": {
        "Containers": {
          "description": "containers",
          "type": "integer",
          "format": "int64"
        },
        "Created": {
          "description": "created",
          "type": "integer",
          "format": "int64"
        },
        "Id": {
          "description": "Id",
          "type": "string",
          "x-go-name": "ID"
        },
        "Labels": {
          "description": "labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ParentId": {
          "description": "parent Id",
          "type": "string",
          "x-go-name": "ParentID"
        },
        "RepoDigests": {
          "description": "repo digests",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RepoTags": {
          "description": "repo tags",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "SharedSize": {
          "description": "shared size",
          "type": "integer",
          "format": "int64"
        },
        "Size": {
          "description": "size",
          "type": "integer",
          "format": "int64"
        },
        "VirtualSize": {
          "description": "virtual size",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "Plugin": {
      "description": "Plugin A plugin for the Engine API",
      "type": "object",
      "required": [
        "Config",
        "Enabled",
        "Name",
        "Settings"
      ],
      "properties": {
        "Config": {
          "$ref": "#/definitions/PluginConfig"
        },
        "Enabled": {
          "description": "True if the plugin is running. False if the plugin is not running, only installed.",
          "type": "boolean"
        },
        "Id": {
          "description": "Id",
          "type": "string",
          "x-go-name": "ID"
        },
        "Name": {
          "description": "name",
          "type": "string"
        },
        "PluginReference": {
          "description": "plugin remote reference used to push/pull the plugin",
          "type": "string"
        },
        "Settings": {
          "$ref": "#/definitions/PluginSettings"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfig": {
      "type": "object",
      "title": "PluginConfig The config of a plugin.",
      "required": [
        "Args",
        "Description",
        "Documentation",
        "Entrypoint",
        "Env",
        "Interface",
        "IpcHost",
        "Linux",
        "Mounts",
        "Network",
        "PidHost",
        "PropagatedMount",
        "WorkDir"
      ],
      "properties": {
        "Args": {
          "$ref": "#/definitions/PluginConfigArgs"
        },
        "Description": {
          "description": "description",
          "type": "string"
        },
        "DockerVersion": {
          "description": "Docker Version used to create the plugin",
          "type": "string"
        },
        "Documentation": {
          "description": "documentation",
          "type": "string"
        },
        "Entrypoint": {
          "description": "entrypoint",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Env": {
          "description": "env",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginEnv"
          }
        },
        "Interface": {
          "$ref": "#/definitions/PluginConfigInterface"
        },
        "IpcHost": {
          "description": "ipc host",
          "type": "boolean"
        },
        "Linux": {
          "$ref": "#/definitions/PluginConfigLinux"
        },
        "Mounts": {
          "description": "mounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginMount"
          }
        },
        "Network": {
          "$ref": "#/definitions/PluginConfigNetwork"
        },
        "PidHost": {
          "description": "pid host",
          "type": "boolean"
        },
        "PropagatedMount": {
          "description": "propagated mount",
          "type": "string"
        },
        "User": {
          "$ref": "#/definitions/PluginConfigUser"
        },
        "WorkDir": {
          "description": "work dir",
          "type": "string"
        },
        "rootfs": {
          "$ref": "#/definitions/PluginConfigRootfs"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigArgs": {
      "description": "PluginConfigArgs plugin config args",
      "type": "object",
      "required": [
        "Description",
        "Name",
        "Settable",
        "Value"
      ],
      "properties": {
        "Description": {
          "description": "description",
          "type": "string"
        },
        "Name": {
          "description": "name",
          "type": "string"
        },
        "Settable": {
          "description": "settable",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Value": {
          "description": "value",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigInterface": {
      "description": "PluginConfigInterface The interface between Docker and the plugin",
      "type": "object",
      "required": [
        "Socket",
        "Types"
      ],
      "properties": {
        "Socket": {
          "description": "socket",
          "type": "string"
        },
        "Types": {
          "description": "types",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginInterfaceType"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigLinux": {
      "description": "PluginConfigLinux plugin config linux",
      "type": "object",
      "required": [
        "AllowAllDevices",
        "Capabilities",
        "Devices"
      ],
      "properties": {
        "AllowAllDevices": {
          "description": "allow all devices",
          "type": "boolean"
        },
        "Capabilities": {
          "description": "capabilities",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Devices": {
          "description": "devices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginDevice"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigNetwork": {
      "description": "PluginConfigNetwork plugin config network",
      "type": "object",
      "required": [
        "Type"
      ],
      "properties": {
        "Type": {
          "description": "type",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigRootfs": {
      "description": "PluginConfigRootfs plugin config rootfs",
      "type": "object",
      "properties": {
        "diff_ids": {
          "description": "diff ids",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "DiffIds"
        },
        "type": {
          "description": "type",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginConfigUser": {
      "description": "PluginConfigUser plugin config user",
      "type": "object",
      "properties": {
        "GID": {
          "description": "g ID",
          "type": "integer",
          "format": "uint32"
        },
        "UID": {
          "description": "UID",
          "type": "integer",
          "format": "uint32"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginDevice": {
      "description": "PluginDevice plugin device",
      "type": "object",
      "required": [
        "Description",
        "Name",
        "Path",
        "Settable"
      ],
      "properties": {
        "Description": {
          "description": "description",
          "type": "string"
        },
        "Name": {
          "description": "name",
          "type": "string"
        },
        "Path": {
          "description": "path",
          "type": "string"
        },
        "Settable": {
          "description": "settable",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginEnv": {
      "description": "PluginEnv plugin env",
      "type": "object",
      "required": [
        "Description",
        "Name",
        "Settable",
        "Value"
      ],
      "properties": {
        "Description": {
          "description": "description",
          "type": "string"
        },
        "Name": {
          "description": "name",
          "type": "string"
        },
        "Settable": {
          "description": "settable",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Value": {
          "description": "value",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginInterfaceType": {
      "description": "PluginInterfaceType plugin interface type",
      "type": "object",
      "required": [
        "Capability",
        "Prefix",
        "Version"
      ],
      "properties": {
        "Capability": {
          "description": "capability",
          "type": "string"
        },
        "Prefix": {
          "description": "prefix",
          "type": "string"
        },
        "Version": {
          "description": "version",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginMount": {
      "description": "PluginMount plugin mount",
      "type": "object",
      "required": [
        "Description",
        "Destination",
        "Name",
        "Options",
        "Settable",
        "Source",
        "Type"
      ],
      "properties": {
        "Description": {
          "description": "description",
          "type": "string"
        },
        "Destination": {
          "description": "destination",
          "type": "string"
        },
        "Name": {
          "description": "name",
          "type": "string"
        },
        "Options": {
          "description": "options",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Settable": {
          "description": "settable",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Source": {
          "description": "source",
          "type": "string"
        },
        "Type": {
          "description": "type",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "PluginSettings": {
      "type": "object",
      "title": "PluginSettings Settings that can be modified by users.",
      "required": [
        "Args",
        "Devices",
        "Env",
        "Mounts"
      ],
      "properties": {
        "Args": {
          "description": "args",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Devices": {
          "description": "devices",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginDevice"
          }
        },
        "Env": {
          "description": "env",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Mounts": {
          "description": "mounts",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PluginMount"
          }
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "Port": {
      "description": "Port An open port on a container",
      "type": "object",
      "required": [
        "PrivatePort",
        "Type"
      ],
      "properties": {
        "IP": {
          "description": "IP",
          "type": "string"
        },
        "PrivatePort": {
          "description": "Port on the container",
          "type": "integer",
          "format": "uint16"
        },
        "PublicPort": {
          "description": "Port exposed on the host",
          "type": "integer",
          "format": "uint16"
        },
        "Type": {
          "description": "type",
          "type": "string"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "ServiceCreateResponse": {
      "description": "ServiceCreateResponse contains the information returned to a client on the\ncreation of a new service.",
      "type": "object",
      "properties": {
        "ID": {
          "description": "The ID of the created service.",
          "type": "string"
        },
        "Warnings": {
          "description": "Optional warning message.\n\nFIXME(thaJeztah): this should have \"omitempty\" in the generated type.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/swarm"
    },
    "ServiceUpdateResponse": {
      "description": "ServiceUpdateResponse service update response",
      "type": "object",
      "properties": {
        "Warnings": {
          "description": "Optional warning messages",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/swarm"
    },
    "Task": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "dead_line": {
          "type": "string",
          "x-go-name": "DeadLine"
        },
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "priority": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Priority"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        }
      },
      "x-go-package": "task-manager/model"
    },
    "TaskCreateRequestBody": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          },
          "x-go-name": "Tasks"
        }
      },
      "x-go-package": "task-manager/dto"
    },
    "Volume": {
      "description": "Volume volume",
      "type": "object",
      "required": [
        "Driver",
        "Labels",
        "Mountpoint",
        "Name",
        "Options",
        "Scope"
      ],
      "properties": {
        "CreatedAt": {
          "description": "Date/Time the volume was created.",
          "type": "string"
        },
        "Driver": {
          "description": "Name of the volume driver used by the volume.",
          "type": "string"
        },
        "Labels": {
          "description": "User-defined key/value metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Mountpoint": {
          "description": "Mount path of the volume on the host.",
          "type": "string"
        },
        "Name": {
          "description": "Name of the volume.",
          "type": "string"
        },
        "Options": {
          "description": "The driver specific options used when creating the volume.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "Scope": {
          "description": "The level at which the volume exists. Either `global` for cluster-wide, or `local` for machine level.",
          "type": "string"
        },
        "Status": {
          "description": "Low-level details about the volume, provided by the volume driver.\nDetails are returned as a map with key/value pairs:\n`{\"key\":\"value\",\"key2\":\"value2\"}`.\n\nThe `Status` field is optional, and is omitted if the volume driver\ndoes not support this feature.",
          "type": "object",
          "additionalProperties": {}
        },
        "UsageData": {
          "$ref": "#/definitions/VolumeUsageData"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "VolumeUsageData": {
      "description": "VolumeUsageData Usage details about the volume. This information is used by the\n`GET /system/df` endpoint, and omitted in other endpoints.",
      "type": "object",
      "required": [
        "RefCount",
        "Size"
      ],
      "properties": {
        "RefCount": {
          "description": "The number of containers referencing this volume. This field\nis set to `-1` if the reference-count is not available.",
          "type": "integer",
          "format": "int64"
        },
        "Size": {
          "description": "Amount of disk space used by the volume (in bytes). This information\nis only available for volumes created with the `\"local\"` volume\ndriver. For volumes created with other volume drivers, this field\nis set to `-1` (\"not available\")",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/ory/dockertest/v3/docker/types"
    },
    "WaitExitError": {
      "description": "WaitExitError container waiting error, if any",
      "type": "object",
      "properties": {
        "Message": {
          "description": "Details of an error",
          "type": "string"
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/container"
    },
    "WaitResponse": {
      "description": "OK response to ContainerWait operation",
      "type": "object",
      "title": "WaitResponse ContainerWaitResponse",
      "required": [
        "StatusCode"
      ],
      "properties": {
        "Error": {
          "$ref": "#/definitions/WaitExitError"
        },
        "StatusCode": {
          "description": "Exit code of the container",
          "type": "integer",
          "format": "int64"
        }
      },
      "x-go-package": "github.com/docker/docker/api/types/container"
    }
  }
}